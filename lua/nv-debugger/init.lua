local dap = require('dap')
vim.fn.sign_define('DapBreakpoint', {text='🟥', texthl='', linehl='', numhl=''})
vim.fn.sign_define('DapBreakpointRejected', {text='🟦', texthl='', linehl='', numhl=''})
vim.fn.sign_define('DapStopped', {text='⭐️', texthl='', linehl='', numhl=''})
vim.api.nvim_set_keymap('n', '<leader>dh', ':lua require"dap".toggle_breakpoint()<CR>')
vim.api.nvim_set_keymap('n', '<leader>dH', ":lua require'dap'.set_breakpoint(vim.fn.input('Breakpoint condition: '))<CR>")
vim.api.nvim_set_keymap('n', '<c-k>', ':lua require"dap".step_out()<CR>')
vim.api.nvim_set_keymap('n', '<c-l>', ':lua require"dap".step_into()<CR>')
vim.api.nvim_set_keymap('n', '<c-j>', ':lua require"dap".step_over()<CR>')
vim.api.nvim_set_keymap('n', '<c-h>', ':lua require"dap".continue()<CR>')
vim.api.nvim_set_keymap('n', '<leader>dk', ':lua require"dap".up()<CR>')
vim.api.nvim_set_keymap('n', '<leader>dj', ':lua require"dap".down()<CR>')
vim.api.nvim_set_keymap('n', '<leader>dc', ':lua require"dap".disconnect({ terminateDebuggee = true });require"dap".close()<CR>')
vim.api.nvim_set_keymap('n', '<leader>dr', ':lua require"dap".repl.toggle({}, "vsplit")<CR><C-w>l')
vim.api.nvim_set_keymap('n', '<leader>di', ':lua require"dap.ui.variables".hover()<CR>')
vim.api.nvim_set_keymap('n', '<leader>di', ':lua require"dap.ui.variables".visual_hover()<CR>')
vim.api.nvim_set_keymap('n', '<leader>d?', ':lua require"dap.ui.variables".scopes()<CR>')
vim.api.nvim_set_keymap('n', '<leader>de', ':lua require"dap".set_exception_breakpoints({"all"})<CR>')
vim.api.nvim_set_keymap('n', '<leader>da', ':lua require"debugHelper".attach()<CR>')
vim.api.nvim_set_keymap('n', '<leader>dA', ':lua require"debugHelper".attachToRemote()<CR>')
vim.api.nvim_set_keymap('n', '<leader>di', ':lua require"dap.ui.widgets".hover()<CR>')
vim.api.nvim_set_keymap('n', '<leader>d?', ':lua local widgets=require"dap.ui.widgets";widgets.centered_float(widgets.scopes)<CR>')

-- nvim-telescope/telescope-dap.nvim
-- require('telescope').load_extension('dap')
-- map('n', '<leader>ds', ':Telescope dap frames<CR>')
-- map('n', '<leader>dc', ':Telescope dap commands<CR>')
-- map('n', '<leader>db', ':Telescope dap list_breakpoints<CR>')
